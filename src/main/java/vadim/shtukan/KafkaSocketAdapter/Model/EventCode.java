package vadim.shtukan.KafkaSocketAdapter.Model;

public enum EventCode {
    EV_AUTO_IN_YES      (1, "Есть автомобиль перед шлагбаумом (индукционный датчик 1)"),
    EV_AUTO_IN_NO       (2, "Нет автомобиля перед шлагбаумом (индукционный датчик 1)"),
    EV_AUTO_OUT_YES     (3, "Есть автомобиль после шлагбаума (индукционный датчик 2)"),
    EV_AUTO_OUT_NO      (4, "Нет автомобиля после шлагбаума (индукционный датчик 2)"),
    EV_BARR_KEY_ON      (5, "Нажата кнопка-замок для аварийного открытия шлагбаума"),
    EV_BARR_KEY_OFF     (6, "Отжата кнопка-замок для аварийного открытия шлагбаума"),
    EV_BARR_CASE_OPEN   (7, "Открытие корпуса шлагбаума"),
    EV_BARR_CASE_CLOSE  (8, "Закрытие корпуса шлагбаума"),
    EV_BARR_AUTO        (9, "Есть событие - кто-то пересек оптический датчик на шлагбауме"),
    EV_BARR_NOAUTO      (10, "Есть событие - кто-то покинул оптический датчик на шлагбауме"),
    EV_BARR_UP          (11, "Шлагбаум поднят (датчик)"),
    EV_BARR_NOUP        (12, "Шлагбаум не поднят (датчик)"),
    EV_BARR_AUTOOPEN    (13, "Автоматическое открытие шлагбаума"),
    EV_BARR_AUTOCLOSE   (14, "Автоматическое закрытие шлагбаума"),
    EV_BARR_AUTOCLOSED  (15, "Автоматическое закрытие шлагбаума, завершение"),
    EV_TERM_POWER_OFF   (16, "Пропадание питания терминала"),
    EV_TERM_POWER_ON    (17, "Питание терминала восстановлено"),
    EV_TERM_CASE_OPEN   (18, "Открытие корпуса терминала"),
    EV_TERM_CASE_CLOSE  (19, "Закрытие корпуса терминала"),
    EV_TERM_CARD_DATA   (20, "Есть данные карты электронного пропуска (192 байта)"),
    EV_TERM_BAG_OFF     (21, "Отсутствует мешок приема карт"),
    EV_TERM_BAG_ON      (22, "Присутствует мешок приема карт"),
    EV_TERM_CARDBAG_OK  (23, "Карта успешно помещена в мешок приема карт"),
    EV_TERM_CARDBAG_ERR (24, "Ошибка помещения карты в мешок приема карт"),
    EV_TERM_CARDEJ_ERR  (25, "Ошибка обратной выдачи карты"),
    EV_BILL_DATA_OK     (26, "На электронном чеке нажали OK"),
    EV_BILL_DATA_NO     (27, "На электронном чеке нажали NO"),
    EV_LIGHT_RED        (28, "Включен красный свет на светофоре"),
    EV_LIGHT_GREEN      (29, "Включен зеленый свет на светофоре"),
    EV_LIGHT_OFF        (30, "Светофор выключен"),
    EV_BILL_BATLOW      (31, "Разряд батареи электронного чека"),
    EV_AUTO_ENTRANCE    (32, "Автомобиль физически заехал"),
    EV_AUTO_NOENTRANCE  (33, "Автомобиль физически не заехал"),
    EV_AUTO_ALARM       (34, "Проезд автомобиля в обход системы"),
    EV_CONNECT          (35, "Коннект клиента к серверу"),
    EV_DISCONNECT       (36, "Дисконнект клиента от сервера"),
    EV_RESTART          (37, "Программный рестарт терминала"),
    EV_UPDATE           (38, "Обновление ПО терминала"),
    EV_BARR_CLOSETO     (39, "Закрытие шлагбаума по таймауту при ручном открытии"),
    EV_CARD_IN          (40, "Есть карта на входном оптодатчике"),
    EV_NOCARD_IN        (41, "Нет карты на входном оптодатчике"),
    EV_CARD_OUT         (42, "Есть карта на выходном оптодатчике"),
    EV_NOCARD_OUT       (43, "Нет карты на выходном оптодатчике"),
    EV_OPTOTIMEOUT      (44, "Сработал таймаут превышения времени проезда автомобиля через шлагбаум"),
    EV_BARR_NOTOPEN     (45, "Шлагбаум не открылся за отведенное время"),
    EV_TIMEOUT          (46, "Таймаут ожидания нажатия кнопки ОК контролером"),
    EV_KEY_ABORT        (47, "Нажата кнопка отмена транзакции"),
    EV_BARR_AUTOOPEN2   (48, "Повторное автоматическое открытие шлагбаума"),
    EV_BARR_NOTOPEN2    (49, "Шлагбаум не открылся повторно за отведенное время"),
    EV_REMOTE_SEND_COMM (50, "Отправлена команда дистанционного открытия шлагбаума"),
    EV_BARR_OPENHAND    (51, "Несанкционированное открытие шлагбаума"),
    EV_HEATER_ON        (52, "Подогреватель включен"),
    EV_HEATER_OFF       (53, "Подогреватель выключен"),
    EV_HEATER_ERR       (54, "Неисправен термодатчик подогревателя");



    private final int code;
    private final String description;

    EventCode(int code, String description) {
        this.code = code;
        this.description = description;
    }

    public int getCode() {
        return code;
    }

    public String getDescription() {
        return description;
    }
}
